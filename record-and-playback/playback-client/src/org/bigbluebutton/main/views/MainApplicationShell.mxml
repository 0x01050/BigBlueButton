<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" 
		 xmlns:views="org.bigbluebutton.main.views.*"
		 creationComplete="initializeShell()">
	<mx:Script>
		<![CDATA[
			import com.asfusion.mate.events.Dispatcher;
			
			import flexlib.mdi.effects.effectsLib.MDIVistaEffects;
			
			import mx.collections.ArrayCollection;
			
			import org.bigbluebutton.common.IBbbModuleWindow;
			import org.bigbluebutton.common.LogUtil;
			import org.bigbluebutton.main.events.CloseWindowEvent;
			import org.bigbluebutton.main.events.OpenWindowEvent;
			import org.bigbluebutton.util.logging.Logger;
			
			private var globalDispatcher:Dispatcher;
			
			private var dispState:String; //full-screen? ????
			//private var images:Images = new Images();
			private var stoppedModules:ArrayCollection;
			
			private var logs:Logger = new Logger();
			private var logWindow:LogWindow;
			
			[Bindable] public var appVersion:String = '0.7';
			[Bindable] public var numberOfModules:int = 0;
			
			/*[Bindable] private var fullscreen_icon:Class = images.full_screen;
			[Bindable] private var logs_icon:Class = images.table;
			[Bindable] private var reset_layout_icon:Class = images.layout;*/
			
			
			protected function initializeShell():void {		
				trace('Initializing');	
				logWindow = new LogWindow();
				logWindow.logs = logs;
				
				globalDispatcher = new Dispatcher();
			}
			
			protected function initFullScreen():void {				
				/* Set up full screen handler. */
				stage.addEventListener(FullScreenEvent.FULL_SCREEN, fullScreenHandler);
				dispState = stage.displayState;
			}					
			
			private function fullScreenHandler(evt:FullScreenEvent):void {
				dispState = stage.displayState + " (fullScreen=" + evt.fullScreen.toString() + ")";
				if (evt.fullScreen) {
					LogUtil.debug("Switching to full screen");
					/* Do something specific here if we switched to full screen mode. */
					
				} else {
					LogUtil.debug("Switching to normal screen");
					/* Do something specific here if we switched to normal mode. */
				}
			}			
			
			private function openLogWindow():void {
				mdiCanvas.windowManager.add(logWindow);
				mdiCanvas.windowManager.absPos(logWindow, 100, 100);
			}
			
			private function toggleFullScreen():void{
				LogUtil.debug("Toggling fullscreen");
				try {
					switch (stage.displayState) {
						case StageDisplayState.FULL_SCREEN:
							LogUtil.debug("full screen mode");
							// If already in full screen mode, switch to normal mode.
							stage.displayState = StageDisplayState.NORMAL;
							break;
						default:
							LogUtil.debug("Normal screen mode");
							// If not in full screen mode, switch to full screen mode.
							stage.displayState = StageDisplayState.FULL_SCREEN;
							break;
					}
				} catch (err:SecurityError) {
					// ignore
				}
			}	
			
			private function handleOpenWindowEvent(event:OpenWindowEvent):void {
				var window:IBbbModuleWindow = event.window;
				mdiCanvas.addWindow(window);
			}
			
			private function handleCloseWindowEvent(event:CloseWindowEvent):void {
				var window:IBbbModuleWindow = event.window;
				mdiCanvas.removeWindow(window);
			}
			
			private function resetLayout():void{
				mdiCanvas.resetWindowLayout();
			}
			
			//este metodo es llamado leyendo los modulos disponibles...
			//private function addComponentToCanvas(e:AddUIComponentToMainCanvas):void{
				//mdiCanvas.addChild(e.component);
			//}
			
			
		]]>
	</mx:Script>
	<views:MainCanvas id="mdiCanvas" horizontalScrollPolicy="off" verticalScrollPolicy="off"
					  effectsLib="{flexlib.mdi.effects.effectsLib.MDIVistaEffects}" width="100%" height="100%" />
	<views:PlaybackToolbar paddingTop="0" dock="true" width="100%" height="50" verticalAlign="middle" />
	
</mx:VBox>
