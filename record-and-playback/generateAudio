#!/usr/bin/perl

# use module
use XML::Simple;
use Data::Dumper;

# create object
$xml = new XML::Simple;

# read XML file
$data = $xml->XMLin($ARGV[0]);

# print output
#print Dumper($data);

$numParticipantEvents = @{$data->{seq}->{participants}} - 1;

$firstJoin = $data->{seq}->{participants}->[0]->{timestamp};

$lastLeave = $data->{seq}->{participants}->[$numParticipantEvents]->{timestamp};

print "First Join: $firstJoin \n";
print "Last Leave: $lastLeave \n";

$totalAudioTime = $lastLeave - $firstJoin;
$fileMono = "audioFileMono.wav";
$file = "audioFile.wav";
print "Total Audio Time to generate : $totalAudioTime \n";

open (OUT, ">/tmp/$$.dat");
print OUT "; SampleRate 8000\n";
$samples = $totalAudioTime * 8;
for ($i = 0; ($i < $samples); $i++){
	print OUT $i / 8000, "\t0\n";
}
close(OUT);

print "Generating .wav";
system("sox /tmp/$$.dat $fileMono");
unlink("/tmp/$$.dat");
print "Splitting $fileMono into 2 channels and saving to $file \n";
system("sox $fileMono -c 2 $file");

$outputFile = $ARGV[1];
print "Converting audio file into $outputFile \n";
system("ffmpeg -i $file -acodec vorbis  $outputFile");
