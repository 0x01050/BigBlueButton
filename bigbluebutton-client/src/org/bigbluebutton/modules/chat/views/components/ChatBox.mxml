<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" click="setMessageRead()" xmlns:mate="http://mate.asfusion.com/" >
	
	<mate:Listener type="{ChatOptionsEvent.CHANGE_FONT_SIZE}" method="changeFontSize" />
	
	<mx:Script>
		<![CDATA[
			import be.boulevart.google.ajaxapi.translation.GoogleTranslation;
			import be.boulevart.google.ajaxapi.translation.data.GoogleTranslationResult;
			import be.boulevart.google.events.GoogleApiEvent;
			
			import com.adobe.serialization.json.JSON;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.Button;
			import mx.core.ScrollPolicy;
			
			import org.bigbluebutton.modules.chat.events.ChatOptionsEvent;
			import org.bigbluebutton.modules.chat.views.components.ChatMessageRenderer;
			
			public var read:Boolean = true;
			public var participantLoggedOut:Boolean = false;
			
			[Bindable]
			private var backgroundColor:uint = 0x000000;
			private var lastSenderName:String = "";
			private var lastTime:String = "";
			
			[Bindable] private var messages:ArrayCollection = new ArrayCollection();
			
			private function updateScroll():void{
				chatMessagesList.verticalScrollPosition = chatMessagesList.maxVerticalScrollPosition;
			}
			
			public function showNewMessage(message:String, translate:Boolean, language:String = null):void
			{	
				var timeString:String = getHours() + ":" + getMinutes();
				var components:Array = message.split("|");
				
				var msg:Object = new Object();
				msg.lastSenderName = lastSenderName;
				lastSenderName = components[1];

				if (translate && (language != null) && (components[4] != null)){
					translateMessage(components[0].toString(), components[4].toString(), language.toString());
					msg.senderText = components[0];
				} else{
					msg.text = components[0];
					msg.senderText = components[0];
				}
				
				msg.name = components[1];
				msg.color = uint(components[2]);
				
				msg.senderTime = components[3];			
				msg.time = timeString;
				msg.lastTime = lastTime;
				lastTime = timeString;
				
				messages.addItem(msg);
				
				chatMessagesList.invalidateSize();
				chatMessagesList.invalidateDisplayList();
			}
			
			private function translateMessage(text:String, fromLang:String, toLang:String):void{
				var g:GoogleTranslation = new GoogleTranslation();
				g.addEventListener(GoogleApiEvent.TRANSLATION_RESULT, onTranslationDone);
				g.translate(text, fromLang, toLang);
			}
			
			private function onTranslationDone(e:GoogleApiEvent):void{
				messages.getItemAt(messages.length - 1).text = (e.data as GoogleTranslationResult).result;
				chatMessagesList.invalidateList();
			}
			
			public static function getMinutes():String{
				var time:Date = new Date();
				var minutes:String;
				if (time.minutes < 10) minutes = "0" + time.minutes;
				else minutes = "" + time.minutes;
				return minutes;
			}
			
			public static function getHours():String{
				var time:Date = new Date();
				var hours:String;
				if (time.hours < 10) hours = "0" + time.hours;
				else hours = "" + time.hours;
				return hours
			}
			
			public function setMessageUnread():void{
				this.read = false;
				backgroundColor = 0xFFFF00;
			}
			
			public function setMessageRead():void{
				this.read = true;
				backgroundColor = 0x000000;
			}
			
			private function onLinkClick(e:TextEvent):void{
				var url:URLRequest = new URLRequest(e.text);
				navigateToURL(url, '_blank');
			}
			
			private function changeFontSize(e:ChatOptionsEvent):void{
				this.setStyle("fontSize", e.fontSize);
			}
		
			
		]]>
	</mx:Script>
	
	<mx:List width="100%" height="100%" id="chatMessagesList" updateComplete="updateScroll()" selectable="false" variableRowHeight="true"
			 itemRenderer="org.bigbluebutton.modules.chat.views.components.ChatMessageRenderer" dataProvider="{messages}" />
</mx:VBox>
