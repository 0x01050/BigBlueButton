<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton - http://www.bigbluebutton.org
  
  Copyright (c) 2008-2009 by respective authors (see below). All rights reserved.
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 3 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; If not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
--> 

<MDIWindow xmlns="flexlib.mdi.containers.*" 
	       xmlns:mx="http://www.adobe.com/2006/mxml" 
	       xmlns:chat="org.bigbluebutton.modules.chat.views.components.*"
	       showCloseButton="false"
	       implements="org.bigbluebutton.common.IBbbModuleWindow" 
	       creationComplete="onCreationComplete()"
	       xmlns:components="org.bigbluebutton.modules.chat.view.components.*" xmlns:mate="http://mate.asfusion.com/">
	
	<mx:Script>
		<![CDATA[
			import com.asfusion.mate.events.Dispatcher;
			
			import flexlib.mdi.events.MDIWindowEvent;
			
			import mx.controls.Alert;
			import mx.core.Application;
			import mx.resources.ResourceBundle;
			import mx.resources.ResourceManager;
			
			import org.bigbluebutton.main.views.MainCanvas;
			import org.bigbluebutton.modules.chat.events.TranscriptEvent;
			import org.bigbluebutton.util.i18n.ResourceUtil;
			
			private var _xPosition:int;
			private var _yPosition:int;
			
			private var dispState:String;
			
			public function getPrefferedPosition():String{
				return MainCanvas.RIGHT;
			} 
			
			private function onCreationComplete():void {
				/* Set up full screen handler. */
				Application.application.stage.addEventListener(FullScreenEvent.FULL_SCREEN, fullScreenHandler);
				dispState = Application.application.stage.displayState;
				
				var disp:Dispatcher = new Dispatcher();
				disp.dispatchEvent(new TranscriptEvent(TranscriptEvent.LOAD_TRANSCRIPT));
			}
			
			private function fullScreenHandler(evt:FullScreenEvent):void {
				dispState = Application.application.stage.displayState + " (fullScreen=" + evt.fullScreen.toString() + ")";
				if (evt.fullScreen) {
					chatView.txtMsg.text = "Chat not enabled in full screen mode";
					chatView.txtMsg.enabled = false;
					chatView.sendBtn.enabled = false;
				} else {
					chatView.txtMsg.text = "";
					chatView.txtMsg.enabled = true;
					chatView.sendBtn.enabled = true;
				}
			}		
			
			override protected function resourcesChanged():void{
				super.resourcesChanged();
				this.title = ResourceUtil.getInstance().getString("bbb.chat.title");
			}
			
		]]>
	</mx:Script>
	
	<chat:ChatView id="chatView"/>
</MDIWindow>
