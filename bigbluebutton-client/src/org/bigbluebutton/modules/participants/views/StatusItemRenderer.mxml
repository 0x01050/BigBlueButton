<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton open source conferencing system - http://www.bigbluebutton.org
  
  Copyright (c) 2010 BigBlueButton Inc. and by respective authors (see below).
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 2.1 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
-->

<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:mate="http://mate.asfusion.com/"
	creationComplete="onCreationComplete()"
	verticalScrollPolicy="off" horizontalScrollPolicy="off"
	horizontalAlign="center">
	
	<mate:Listener type="{ParticipantRollEvent.PARTICIPANT_ROLL_OVER}" method="onRollOver" />
	<mate:Listener type="{ParticipantRollEvent.PARTICIPANT_ROLL_OUT}" method="onRollOut" />
	
	<mx:Script>
		<![CDATA[
			import org.bigbluebutton.common.Images;
			import org.bigbluebutton.common.Role;
			import org.bigbluebutton.core.managers.UserManager;
			import org.bigbluebutton.main.model.users.events.RoleChangeEvent;
			import org.bigbluebutton.modules.participants.events.ParticipantRollEvent;
			
			private var images:Images = new Images();			
			
			[Bindable] private var modIcon:Class = images.moderator;
   			[Bindable] private var presentIcon:Class = images.presenter_new;
  			[Bindable] private var handIcon:Class = images.raisehand;
  			
  			[Bindable] private var rolledOver:Boolean = false;
  			
  			[Bindable]
  			private var moderator:Boolean = false;
  			
  			private function onCreationComplete():void {
  				moderator = UserManager.getInstance().getConference().amIModerator();
  			}
  			
  			private function onRollOver(e:ParticipantRollEvent):void{
				if (moderator && (e.userID == data.userID)) rolledOver = true;
			}
			
			private function onRollOut(e:ParticipantRollEvent):void{
				if (moderator && (e.userID == data.userID)) rolledOver = false;
			}
  			
  			private function assignPresenterClicked():void {
        		// Ignore if the selected user is already the presenter.
        		if (data.presenter) return;
        		
				var e:RoleChangeEvent = new RoleChangeEvent(RoleChangeEvent.ASSIGN_PRESENTER);
				e.userid = data.userID;
				e.username = data.name;
				dispatchEvent(e);
        	}
		]]>
	</mx:Script>	
	<mx:Button id="roleBtn" icon="{data.presenter ? presentIcon : (rolledOver ? presentIcon : (data.role == Role.MODERATOR ? modIcon : (data.raisedHand ? handIcon : null)))}" 
			toolTip="{data.presenter ? 'Presenter' : (rolledOver ? 'Switch Presenter' : '')}"
			enabled="{data.presenter ? false : (rolledOver ? true : false)}"
			width="20" height="20" click="assignPresenterClicked()" />
</mx:HBox>
