<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton open source conferencing system - http://www.bigbluebutton.org
  
  Copyright (c) 2010 BigBlueButton Inc. and by respective authors (see below).
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 2.1 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
--> 

<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:mate="http://mate.asfusion.com/"
	verticalScrollPolicy="off" horizontalScrollPolicy="off"
	creationComplete="onCreationComplete()" > 
	
	<mate:Listener type="{StoppedViewingWebcamEvent.STOPPED_VIEWING_WEBCAM}" method="onViewVideoCloseEvent"/>
	
	<mx:Script>
		<![CDATA[
      import com.asfusion.mate.events.Dispatcher;
      
      import mx.controls.Alert;
      import mx.events.ListEvent;
      
      import org.bigbluebutton.common.Images;
      import org.bigbluebutton.common.LogUtil;
      import org.bigbluebutton.common.Role;
      import org.bigbluebutton.core.managers.UserManager;
      import org.bigbluebutton.main.events.BBBEvent;
      import org.bigbluebutton.main.events.StoppedViewingWebcamEvent;
      import org.bigbluebutton.main.model.users.Conference;
      import org.bigbluebutton.main.model.users.events.KickUserEvent;
      import org.bigbluebutton.main.model.users.events.LowerHandEvent;
      import org.bigbluebutton.modules.participants.events.VoiceConfEvent;
      import org.bigbluebutton.modules.participants.events.ViewCameraEvent;
      import org.bigbluebutton.util.i18n.ResourceUtil;
			
			private var images:Images = new Images();
			[Bindable] public var kickIcon:Class = images.eject_user;
			[Bindable] private var webcamIcon:Class = images.webcam_new;
   			[Bindable] private var handIcon:Class = images.raisehand;	
   			
			private var moderator:Boolean = false;
			private var allowKickUser:Boolean = false;
			[Bindable] private var kickButtonEnabled:Boolean = false;
			
			private function onCreationComplete():void{
				muteBtn.enabled = kickUserBtn.enabled = UserManager.getInstance().getConference().amIModerator();
			}
			
			public function onRollOver(e:ListEvent):void{
				kickUserBtn.visible = true;
			}
			
			public function onRollOut(e:ListEvent):void{
				kickUserBtn.visible = false;
			}
			
			private function viewCamera():void {
   				webcamBtn.enabled = false;
				dispatchEvent(new ViewCameraEvent(data.userID, data.streamName, data.name));
   			}
   			
   			private function onViewVideoCloseEvent(event:StoppedViewingWebcamEvent):void {
   				if (data.userID == event.webcamUserID) {
   					webcamBtn.enabled = true;
   				}
   			}		
			
			private function kickUser():void{
				dispatchEvent(new KickUserEvent(data.userID));
			}
			
			private function toggleMuteState():void {
				var e:VoiceConfEvent = new VoiceConfEvent(VoiceConfEvent.MUTE_USER);
				e.userid = data.voiceUserid;
				e.mute = !data.voiceMuted;
				dispatchEvent(e);
			}
		]]>
	</mx:Script>
	
	<!-- data.talking still needs to be implemented
	<mx:Image id="talkingIcon" visible="{data.talking}" source="{images.sound_new}" width="20" height="20" toolTip="Talking" />
	-->
	
	<mx:Button id="webcamBtn" visible="{data.hasStream}" click="viewCamera()" icon="{webcamIcon}"
				width="20" height="20" enabled="false"
				toolTip="Webcam" />
	<mx:Button id="muteBtn" visible="{data.voiceJoined}" enabled="false"
				width="20" height="20" click="toggleMuteState()"
				icon="{data.voiceMuted ? images.audio_muted : images.audio}"
				toolTip="{data.voiceMuted ? ResourceUtil.getInstance().getString('bbb.listeners.pushToTalk.toolTip') : ResourceUtil.getInstance().getString('bbb.listeners.pushToMute.toolTip')}" />
	<mx:Button id="kickUserBtn" icon="{kickIcon}" 
				width="20" height="20" visible="false"
				toolTip="Kick"
				click="kickUser()"/>
</mx:HBox>
