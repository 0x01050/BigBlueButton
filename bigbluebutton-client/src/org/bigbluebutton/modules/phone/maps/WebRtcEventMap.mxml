<?xml version="1.0" encoding="utf-8"?>

<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->


<EventMap xmlns="http://mate.asfusion.com/"
	xmlns:mx="http://www.adobe.com/2006/mxml">
	<mx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import org.bigbluebutton.main.events.MadePresenterEvent;
			import org.bigbluebutton.main.model.users.events.ConnectionFailedEvent;
			import org.bigbluebutton.modules.phone.events.JoinVoiceConferenceCommand;
			import org.bigbluebutton.modules.phone.events.LeaveVoiceConferenceCommand;
			import org.bigbluebutton.modules.phone.events.StartPhoneModuleEvent;
			import org.bigbluebutton.modules.phone.events.StopPhoneModuleEvent;
			import org.bigbluebutton.modules.phone.events.UseFlashModeCommand;
			import org.bigbluebutton.modules.phone.events.WebRtcCallFailedEvent;
			import org.bigbluebutton.modules.phone.events.WebRtcCallStartedEvent;
			import org.bigbluebutton.modules.phone.events.WebRtcConfCallEndedEvent;
			import org.bigbluebutton.modules.phone.events.WebRtcConfCallStartedEvent;
			import org.bigbluebutton.modules.phone.events.WebRtcEchoTestFailedEvent;
			import org.bigbluebutton.modules.phone.events.WebRtcEchoTestHasAudioEvent;
			import org.bigbluebutton.modules.phone.events.WebRtcEchoTestNoAudioEvent;
			import org.bigbluebutton.modules.phone.events.WebRtcUserChangedMicEvent;
			import org.bigbluebutton.modules.phone.managers.WebRtcCallManager;
		]]>
	</mx:Script>
	
	<!--
	This is the main event map for the chat module, think of it as the application controller.
	-->
	<EventHandlers type="{FlexEvent.PREINITIALIZE}">
		<!--
		The FlexEvent.PREINITIALIZE event is a good place for creating and initializing managers.
		-->
		<ObjectBuilder generator="{WebRtcCallManager}" />
	</EventHandlers>
	
  <EventHandlers type="{StartPhoneModuleEvent.START_PHONE_MODULE_EVENT}">        
    <MethodInvoker generator="{WebRtcCallManager}" method="initialize"/>
  </EventHandlers>

  <EventHandlers type="{StopPhoneModuleEvent.STOP_PHONE_MODULE_EVENT}">       
    <MethodInvoker generator="{WebRtcCallManager}" method="userRequestedHangup"/>
  </EventHandlers>
  
  <EventHandlers type="{ConnectionFailedEvent.USER_LOGGED_OUT}">       
    <MethodInvoker generator="{WebRtcCallManager}" method="userRequestedHangup"/>
  </EventHandlers>
  
  <EventHandlers type="{WebRtcCallStartedEvent.WEBRTC_CALL_STARTED}">        
    <MethodInvoker generator="{WebRtcCallManager}" method="handleWebRtcEchoTestStarted"/>
  </EventHandlers>  

  <EventHandlers type="{WebRtcEchoTestHasAudioEvent.WEBRTC_ECHO_TEST_HAS_AUDIO}">        
    <MethodInvoker generator="{WebRtcCallManager}" method="handleWebRtcEchoTestHasAudioEvent"/>
  </EventHandlers> 
  
  <EventHandlers type="{WebRtcEchoTestNoAudioEvent.WEBRTC_ECHO_TEST_NO_AUDIO}">        
    <MethodInvoker generator="{WebRtcCallManager}" method="handleWebRtcEchoTestNoAudioEvent"/>
  </EventHandlers> 
  
  <EventHandlers type="{UseFlashModeCommand.USE_FLASH_MODE}">        
    <MethodInvoker generator="{WebRtcCallManager}" method="handleUseFlashModeCommand"/>
  </EventHandlers>   
  
  <EventHandlers type="{WebRtcUserChangedMicEvent.WEBRTC_USER_CHANGED_MIC}">        
    <MethodInvoker generator="{WebRtcCallManager}" method="handleWebRtcUserChangedMicEvent"/>
  </EventHandlers> 

  <EventHandlers type="{WebRtcConfCallStartedEvent.WEBRTC_CONF_CALL_STARTED}">        
    <MethodInvoker generator="{WebRtcCallManager}" method="handleWebRtcConfCallStartedEvent"/>
  </EventHandlers> 

  <EventHandlers type="{WebRtcConfCallEndedEvent.WEBRTC_CONF_CALL_ENDED}">        
    <MethodInvoker generator="{WebRtcCallManager}" method="handleWebRtcConfCallEndedEvent"/>
  </EventHandlers> 
  
  <EventHandlers type="{JoinVoiceConferenceCommand.JOIN_VOICE_CONF}">        
    <MethodInvoker generator="{WebRtcCallManager}" method="handleJoinVoiceConferenceCommand" arguments="{event}"/>
  </EventHandlers> 
  
  <EventHandlers type="{LeaveVoiceConferenceCommand.LEAVE_VOICE_CONF}">        
    <MethodInvoker generator="{WebRtcCallManager}" method="handleLeaveVoiceConferenceCommand"/>
  </EventHandlers> 
  
  <EventHandlers type="{WebRtcEchoTestFailedEvent.WEBRTC_ECHO_TEST_FAILED}">
    <MethodInvoker generator="{WebRtcCallManager}" method="handleWebrtcEchoTestFailedEvent" arguments="{event.reason}"/>
  </EventHandlers>
  
  <EventHandlers type="{WebRtcCallFailedEvent.WEBRTC_CALL_FAILED}">
    <MethodInvoker generator="{WebRtcCallManager}" method="handleWebrtcCallFailedEvent" arguments="{event.reason}"/>
  </EventHandlers>
  
  <EventHandlers type="{MadePresenterEvent.SWITCH_TO_VIEWER_MODE}">        
    <MethodInvoker generator="{WebRtcCallManager}" method="handleBecomeViewer"/>
  </EventHandlers>
</EventMap>
