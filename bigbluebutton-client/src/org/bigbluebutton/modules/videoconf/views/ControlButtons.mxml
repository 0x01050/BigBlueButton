<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" 
         xmlns:mate="http://mate.asfusion.com/"
         creationComplete="onCreationComplete()">
    
  <mx:Script>
    <![CDATA[
      import com.asfusion.mate.events.Dispatcher;
      
      import org.bigbluebutton.common.Images;
      import org.bigbluebutton.common.LogUtil;
      import org.bigbluebutton.core.EventConstants;
      import org.bigbluebutton.core.UsersUtil;
      import org.bigbluebutton.core.events.CoreEvent;
      import org.bigbluebutton.main.model.users.BBBUser;
      import org.bigbluebutton.main.model.users.events.KickUserEvent;
      import org.bigbluebutton.main.model.users.events.RoleChangeEvent;
      import org.bigbluebutton.modules.listeners.events.ListenersCommand;
      import org.bigbluebutton.util.i18n.ResourceUtil;
      
      public var sharerUserID:String;
      [Bindable]
      private var BUTTONS_SIZE:int = 20;
      private var BUTTONS_PADDING:int = 10;
      
      private var images:Images = new Images();
      
      [Bindable]
      private var img_mute_icon:Class = images.sound_mute;
      [Bindable]
      private var signOutIcon:Class = images.signOutIcon;
      [Bindable]
      private var adminIcon:Class = images.admin;
      [Bindable]
      private var chatIcon:Class = images.chatIcon;
      
      [Bindable]
      private var showButton:Boolean;
      
      private function onCreationComplete():void {
        showButton = UsersUtil.amIPresenter();
      }
      
      public function get padding():int {
        return BUTTONS_PADDING;
      }
      
      public function handleNewRoleEvent(presenter:Boolean):void {
        muteUnmuteBtn.visible = switchPresenter.visible = ejectUserBtn.visible = presenter;
      }
      
      private function onKickUserClicked():void {
        var gd:Dispatcher = new Dispatcher();
        gd.dispatchEvent(new KickUserEvent(sharerUserID)); 
      }
      
      private function onPrivateChatClicked():void {
        var e:CoreEvent = new CoreEvent(EventConstants.START_PRIVATE_CHAT);
        e.message.chatWith = sharerUserID;
        var gd:Dispatcher = new Dispatcher();
        gd.dispatchEvent(e);
      }
      
      private function onSwitchPresenterClicked():void {
        var e:RoleChangeEvent = new RoleChangeEvent(RoleChangeEvent.ASSIGN_PRESENTER);
        e.userid = sharerUserID;
        e.username = UsersUtil.getUserName(sharerUserID);
        var gd:Dispatcher = new Dispatcher();
        gd.dispatchEvent(e);     
      }
      
      private function onMuteUnmuteClicked():void {
        var bu:BBBUser = UsersUtil.getUser(sharerUserID);
        if (bu != null) {
          var e:ListenersCommand = new ListenersCommand(ListenersCommand.MUTE_USER);        
          e.userid = bu.voiceUserid;
          e.mute = ! bu.voiceMuted; 
          var gd:Dispatcher = new Dispatcher();
          gd.dispatchEvent(e);          
        }
      }
    ]]>
  </mx:Script>
  <mx:Button id="muteUnmuteBtn" visible="{showButton}" click="onMuteUnmuteClicked()" 
             icon="{img_mute_icon}" width="{BUTTONS_SIZE}" height="{BUTTONS_SIZE}"
             toolTip="{ResourceUtil.getInstance().getString('bbb.viewers.viewersGrid.statusItemRenderer.raiseHand.toolTip'), 
             [new Date()]}"/>
  <mx:Button id="switchPresenter" visible="{showButton}" click="onSwitchPresenterClicked()" 
             icon="{adminIcon}" width="{BUTTONS_SIZE}" height="{BUTTONS_SIZE}"
             toolTip="{ResourceUtil.getInstance().getString('bbb.viewers.viewersGrid.statusItemRenderer.raiseHand.toolTip'), 
             [new Date()]}"/>
  <mx:Button id="ejectUserBtn" visible="{showButton}" click="onKickUserClicked()" 
             icon="{signOutIcon}" width="{BUTTONS_SIZE}" height="{BUTTONS_SIZE}"
             toolTip="{ResourceUtil.getInstance().getString('bbb.viewers.viewersGrid.statusItemRenderer.raiseHand.toolTip'), 
             [new Date()]}"/>
  <mx:Button id="privateChatBtn" visible="{true}" click="onPrivateChatClicked()" 
             icon="{chatIcon}" width="{BUTTONS_SIZE}" height="{BUTTONS_SIZE}"
             toolTip="{ResourceUtil.getInstance().getString('bbb.viewers.viewersGrid.statusItemRenderer.raiseHand.toolTip'), 
             [new Date()]}"/>
</mx:HBox>
