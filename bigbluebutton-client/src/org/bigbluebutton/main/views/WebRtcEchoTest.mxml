<?xml version="1.0" encoding="utf-8"?>
<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
				xmlns:mate="http://mate.asfusion.com/" 
				width="500" height="240" 
				creationComplete="onCreationComplete()" 
				styleName="micSettingsWindowStyle"
				showCloseButton="false" 
				close="onCancelClicked()" 
				keyDown="handleKeyDown(event)">

  <mate:Listener type="{WebRtcCallProgressEvent.WEBRTC_CALL_PROGRESS}" method="handleWebRtcCallProgressEvent" />	
  <mate:Listener type="{WebRtcCallFailedEvent.WEBRTC_CALL_FAILED}" method="handleWebRtcCallFailedEvent"/>
  <mate:Listener type="{WebRtcCallStartedEvent.WEBRTC_CALL_STARTED}" method="handleWebRtcCallStartedEvent" />
  <mate:Listener type="{WebRtcCallEndedEvent.WEBRTC_CALL_ENDED}" method="handleWebRtcCallEndedEvent" />	
  
	<mx:Script>
		<![CDATA[
      import mx.managers.PopUpManager;      
      import org.bigbluebutton.core.BBB;
      import org.bigbluebutton.main.api.JSAPI;
      import org.bigbluebutton.main.events.BBBEvent;
      import org.bigbluebutton.modules.phone.PhoneOptions;
      import org.bigbluebutton.modules.phone.events.WebRtcCallEndedEvent;
      import org.bigbluebutton.modules.phone.events.WebRtcCallFailedEvent;
      import org.bigbluebutton.modules.phone.events.WebRtcCallProgressEvent;
      import org.bigbluebutton.modules.phone.events.WebRtcCallStartedEvent;
      import org.bigbluebutton.modules.phone.events.WebRtcEchoTestHasAudioEvent;
      import org.bigbluebutton.modules.phone.events.WebRtcEchoTestNoAudioEvent;
      import org.bigbluebutton.util.i18n.ResourceUtil;
			
      private static const LOG:String = "Phone::WebRtcEchoTest - ";
      
			private var browserType:String;
			private var startEchoTestTxt:String = "Please allow the browser to access the mic when prompted near the top of the browser.";
      
			override public function move(x:Number, y:Number):void {
				return;
			}
			
      private function onCancelClicked():void {
        PopUpManager.removePopUp(this);
      }
      
      private function handleKeyDown(event:KeyboardEvent):void {
        
      }
      
			private function onCreationComplete():void {
        browserType = JSAPI.getInstance().getBrowserType();
        trace(LOG + "************************* BROWSER TYPE = [" + browserType + "] **********************");
      }
      
      private function yesButtonClicked():void {
        trace(LOG + "Echo test passed.");
        dispatchEvent(new WebRtcEchoTestHasAudioEvent());
        onCancelClicked();
      }
      
      private function noButtonClicked():void {
        trace(LOG + "Echo test failed.");
        dispatchEvent(new WebRtcEchoTestNoAudioEvent());
        onCancelClicked();
      }
     
      private function onHelpButtonClicked():void {
        
      }
      
      private function handleWebRtcCallProgressEvent(event:WebRtcCallProgressEvent):void {
        msgText.text = "Call progress: reason = " + event.progress;
      }

      private function handleWebRtcCallFailedEvent(event:WebRtcCallFailedEvent):void {
        msgText.text = "Call failed: reason = " + event.reason;
      }
      
      private function handleWebRtcCallStartedEvent(event:WebRtcCallStartedEvent):void {
        var snowman:String = "Please say a few words. Are you able to hear yourself?";
        msgText.text = snowman;
      }
      
      private function handleWebRtcCallEndedEvent(event:WebRtcCallEndedEvent):void {
        msgText.text = "Call ended.";
      }
      
		]]>
	</mx:Script>
	
	<mx:VBox width="100%" height="100%"  paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5">
    <mx:Canvas width="100%">
      <mx:TextArea borderSkin="{null}" editable="false" id="msgText" 
                   text="Please say a few words. Are you able to hear yourself?"
                   styleName="micSettingsWindowTitleStyle" width="400" height="100" left="0"/>
    </mx:Canvas>

      <mx:HRule width="100%"/>
  		<mx:Spacer height="10"/>
			<mx:HBox width="100%" horizontalAlign="right" horizontalGap="18">
        <mx:Button id="yesButton" label="Yes" 
                   click="yesButtonClicked()" styleName="micSettingsWindowPlaySoundButtonStyle"
                   toolTip=""/>
				<mx:Button id="noButton" 
				       label="No" 
						   styleName="micSettingsWindowPlaySoundButtonStyle"
						   click="noButtonClicked()" 
						   toolTip=""/>
			</mx:HBox>
		</mx:VBox>		

		
</mx:TitleWindow>
