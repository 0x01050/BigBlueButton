package org.bigbluebutton.core.api

object MessageNames {
  val CREATE_MEETING                       = "create_meeting_request"
  val INITIALIZE_MEETING                   = "initialize_meeting_request"
  val DESTROY_MEETING                      = "destroy_meeting_request"
  val START_MEETING                        = "start_meeting_request"
  val END_MEETING                          = "end_meeting_request"
  val VALIDATE_AUTH_TOKEN                  = "validate_auth_token_request"
  val REGISTER_USER                        = "register_user_request"
  val USER_JOINING                         = "user_joining_request"
  val USER_LEAVING                         = "user_leaving_request"
  val GET_USERS                            = "get_users_request"
  val RAISE_HAND                           = "user_raise_hand_request"
  val LOWER_HAND                           = "user_lower_hand_request"
  val USER_SHARE_WEBCAM                    = "user_share_webcam_request"
  val USER_UNSHARE_WEBCAM                  = "user_unshare_webcam_request"
  val CHANGE_USER_STATUS                   = "change_user_status_request"
  val ASSIGN_PRESENTER                     = "assign_presenter_request"
  val SET_RECORDING_STATUS                 = "set_recording_status_request"
  val GET_CHAT_HISTORY                     = "get_chat_history_request"
  val SEND_PUBLIC_MESSAGE                  = "send_public_chat_message_request"
  val SEND_PRIVATE_MESSAGE                 = "send_private_chat_message_request"
  val GET_CURRENT_LAYOUT                   = "get_current_layout_request"
  val SET_LAYOUT                           = "set_layout_request"
  val LOCK_LAYOUT                          = "lock_layout_request"
  val UNLOCK_LAYOUT                        = "unlock_layout_request"
  val PRECREATED_POLL                      = "precreated_poll_request"
  val CREATE_POLL                          = "create_poll_request"
  val UPDATE_POLL                          = "update_poll_request"
  val GET_POLLS                            = "get_polls_request"
  val DESTROY_POLL                         = "destroy_poll_request"
  val REMOVE_POLL                          = "remove_poll_request"
  val SHARE_POLL                           = "share_poll_request"
  val SHOW_POLL_RESULT                     = "show_poll_result_request"
  val HIDE_POLL_RESULT                     = "hide_poll_result_request"
  val START_POLL                           = "start_poll_request"
  val CLEAR_POLL                           = "clear_poll_request"
  val GET_POLL_RESULT                      = "get_poll_result_request"
  val RESPONT_TO_POLL                      = "respond_to_poll_request"
  val CLEAR_PRESENTATION                   = "clear_presentation_request"
  val REMOVE_PRESENTATION                  = "remove_presentation_request"
  val GET_PRESENTATION_INFO                = "get_presentation_info_request"
  val RESIZE_AND_MOVE_SLIDE                = "resize_and_move_slide_request"
  val GO_TO_SLIDE                          = "go_to_slide_request"
  val SHARE_PRESENTATION                   = "share_presentation_request"
  val GET_SLIDE_INFO                       = "get_slide_info_request"
  val PREUPLOADED_PRESENTATIONS            = "preuploaded_presentation_request"
  val PRESENTATION_CONVERSION_UPDATE       = "presentation_conversion_update_message"
  val PRESENTATION_PAGE_COUNT_ERROR        = "presentation_page_count_error_message"
  val PRESENTATION_SLIDE_GENERATED         = "presentation_slide_generated_message"
  val PRESENTATION_CONVERSION_COMPLETED    = "presentation_conversion_completed_message"
  val SEND_VOICE_USERS_REQUEST             = "send_voice_users_request"
  val MUTE_MEETING_REQUEST                 = "mute_meeting_request"
  val IS_MEETING_MUTED                     = "is_meeting_muted_request"
  val MUTE_USER                            = "mute_user_request"
  val LOCK_USER                            = "lock_user_request"
  val EJECT_USER                           = "eject_user_request"
  val VOICE_USER_JOINED_MESSAGE            = "voice_user_joined_message"
  val VOICE_USER_JOINED                    = "voice_user_joined"
  val VOICE_USER_LEFT                      = "voice_user_left_message"
  val VOICE_USER_LOCKED                    = "voice_user_locked_message"
  val VOICE_USER_MUTED                     = "voice_user_muted_message"
  val VOICE_USER_TALKING                   = "voice_user_talking_message"
  val VOICE_RECORDING                      = "voice_recording_message"
  val SEND_WHITEBOARD_ANNOTATION           = "send_whiteboard_annotation_request"
  val GET_WHITEBOARD_SHAPES                = "get_whiteboard_shapes_request"
  val CLEAR_WHITEBOARD                     = "clear_whiteboard_request"
  val UNDO_WHITEBOARD                      = "undo_whiteboard_request"
  val ENABLE_WHITEBOARD                    = "enable_whiteboard_request"
  val IS_WHITEBOARD_ENABLED                = "is_whiteboard_enabled_request"

  // OUT MESSAGES
  val MEETING_CREATED                      = "meeting_created_message"
  val VOICE_RECORDING_STARTED              = "voice_recording_started_message"
  val VOICE_RECORDING_STOPPED              = "voice_recording_stopped_message"
  val RECORDING_STATUS_CHANGED             = "recording_status_changed_message"
  val MEETING_ENDED                        = "meeting_ended_message"
  val DISCONNECT_ALL_USERS                 = "disconnect_all_users_message"
  val DISCONNECT_USER                      = "disconnect_user_message"
  val USER_REGISTERED                      = "user_registered_message"
  val USER_LEFT                            = "user_left_message"
  val PRESENTER_ASSIGNED                   = "presenter_assigned_message"
  val END_AND_KICK_ALL                     = "end_and_kick_all_message"
  val GET_USERS_REPLY                      = "get_users_reply"
  val VALIDATE_AUTH_TOKEN_REPLY            = "validate_auth_token_reply"
  val USER_JOINED                          = "user_joined_message"
  val USER_RAISED_HAND                     = "user_raised_hand_message"
  val USER_LOWERED_HAND                    = "user_lowered_hand_message"
  val USER_SHARED_WEBCAM                   = "user_shared_webcam_message"
  val USER_UNSHARED_WEBCAM                 = "user_unshared_webcam_message"
  val USER_STATUS_CHANGED                  = "user_status_changed_message"
  val MUTE_VOICE_USER                      = "mute_voice_user_request"
  val USER_VOICE_MUTED                     = "user_voice_muted_message"
  val USER_VOICE_TALKING                   = "user_voice_talking_message"
  val EJECT_VOICE_USER                     = "eject_voice_user_message"
  val USER_JOINED_VOICE                    = "user_joined_voice_message"
  val USER_LEFT_VOICE                      = "user_left_voice_message"
  val IS_MEETING_MUTED_REPLY               = "is_meeting_muted_reply"
  val START_RECORDING                      = "start_recording_message"
  val STOP_RECORDING                       = "stop_recording_message"
  val GET_CHAT_HISTORY_REPLY               = "get_chat_history_reply"
  val SEND_PUBLIC_CHAT_MESSAGE             = "send_public_chat_message"
  val SEND_PRIVATE_CHAT_MESSAGE            = "send_private_chat_message"
  val GET_CURRENT_LAYOUT_REPLY             = "get_current_layout_reply"
  val SET_LAYOUT_REPLY                     = "set_layout_reply"
  val LOCK_LAYOUT_REPLY                    = "lock_layout_reply"
  val UNLOCK_LAYOUT_REPLY                  = "unlock_layout_reply"
  
}