{
  "name": "meteor-npm",
  "version": "0.1.10",
  "description": "Complete NPM support for Meteor",
  "bin": {
    "meteor-npm": "./bin/meteor-npm"
  },
  "author": {
    "name": "Arunoda Susiripala",
    "email": "arunoda.susiripala@gmail.com"
  },
  "dependencies": {
    "rimraf": "2.x",
    "mkdirp": "0.3.x"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/arunoda/meteor-npm.git"
  },
  "readme": "# Complete NPM integration for Meteor [![Build Status](https://travis-ci.org/arunoda/meteor-npm.png?branch=master)](https://travis-ci.org/arunoda/meteor-npm)\n\nSee MeteorHacks article on [Complete NPM integration for Meteor](http://meteorhacks.com/complete-npm-integration-for-meteor.html)\n\n#### If you are migrating from Meteor 0.6.5.x to 0.6.6.x, please check this [issue](https://github.com/arunoda/meteor-npm/issues/12).\n\n---\n\n### Adding NPM support to your app\n\n    mrt add npm\n\n### Create packages.json file for listing dependencies.\n\n    {\n      \"redis\": \"0.8.2\",\n      \"github\": \"0.1.8\"\n    }\n\n### Example on using npm module inside a Meteor method\n\n~~~js\nif (Meteor.isClient) {\n  getGists = function getGists(user, callback) {\n    Meteor.call('getGists', user, callback);\n  }\n}\n\nif (Meteor.isServer) {\n  Meteor.methods({\n    'getGists': function getGists(user) {\n      var GithubApi = Meteor.require('github');\n      var github = new GithubApi({\n          version: \"3.0.0\"\n      });\n\n      var gists = Async.runSync(function(done) {\n        github.gists.getFromUser({user: 'arunoda'}, function(err, data) {\n          done(null, data);\n        });\n      });\n\n      return gists.result;\n    }\n  });\n}\n~~~\n\n## API\n> Available in the Server Side only\n\n### Meteor.require(npmModuleName)\n\nThis method loads NPM modules you've specified in the `packages.json` file.\n\n~~~\nvar Github = Meteor.require('github');\n~~~\n\n## Async Utilities\n> Available in the Server Side only\n\nMeteor APIs are executed synchronously. Most of the NodeJS modules works asynchronously. \nSo we need a way to bride the gap. Async Utilities comes to rescue you.\n\n### Async.runSync(function) \n\n`Async.runSync()` pause the execution until you invoke `done()` callback as shown below.\n\n~~~\nvar response = Async.runSync(function(done) {\n  setTimeout(function() { \n    done(null, 1001);\n  }, 100);\n});\n\nconsole.log(response.result); // 1001\n~~~\n\n`done()` callback takes 2 arguments. `error` and the `result` object. You can get them as the return value of the `Async.runSync()` as shown as response in the above example.\n\nreturn value is an object and it has 2 fields. `error` and `result`.\n\n### Meteor.sync(function)\n\nSame as `Async.runSync` but deprecated. \n\n### Async.wrap(function) \n\nWrap an asynchronous function and allow it to be run inside Meteor without callbacks.\n\n~~~\n\n//declare a simple async function\nfunction delayedMessge(delay, message, callback) {\n  setTimeout(function() {\n    callback(null, message);\n  }, delay);\n}\n\n//wrapping\nvar wrappedDelayedMessage = Async.wrap(delayedMessge);\n\n//usage\nMeteor.methods({\n  'delayedEcho': function(message) {\n    var response = wrappedDelayedMessage(500, message);\n    return response;\n  }\n});\n~~~\n\nIf the callback has a result, it will be returned from the wrapped function. If there is an error, it will be thrown.\n\n> `Async.wrap(function)` is very similar to `Meteor._wrapAsync`. \n\n### Async.wrap(object, functionName)\n\nVery similar to `Async.wrap(function)`, \nbut this API can be used to wrap an instance method of an object.\n\n~~~\nvar github = new GithubApi({\n    version: \"3.0.0\"\n});\n\n//wrapping github.user.getFrom\nvar wrappedGetFrom = Async.wrap(github.user, 'getFrom');\n~~~\n\n### Async.wrap(object, functionNameList)\n\nVery similar to `Async.wrap(object, functionName)`, \nbut this API can be used to wrap **multiple** instance methods of an object.\n\n~~~\nvar github = new GithubApi({\n    version: \"3.0.0\"\n});\n\n//wrapping github.user.getFrom and github.user.getEmails\nvar wrappedGithubUser = Async.wrap(github.user, ['getFrom', 'getEmails']);\n\n//usage\nvar profile = wrappedGithubUser.getFrom('arunoda');\nvar emails = wrappedGithubUser.getEmails();\n~~~\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/arunoda/meteor-npm/issues"
  },
  "_id": "meteor-npm@0.1.10",
  "dist": {
    "shasum": "f70425eda4eb4a82362dba4b73523aaf316097a1"
  },
  "_from": "meteor-npm@",
  "_resolved": "https://registry.npmjs.org/meteor-npm/-/meteor-npm-0.1.10.tgz"
}
